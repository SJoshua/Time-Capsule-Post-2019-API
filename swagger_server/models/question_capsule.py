# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class QuestionCapsule(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, question: str=None, answer: str=None, new_answer: str=None, time: int=None):  # noqa: E501
        """QuestionCapsule - a model defined in Swagger

        :param id: The id of this QuestionCapsule.  # noqa: E501
        :type id: int
        :param question: The question of this QuestionCapsule.  # noqa: E501
        :type question: str
        :param answer: The answer of this QuestionCapsule.  # noqa: E501
        :type answer: str
        :param new_answer: The new_answer of this QuestionCapsule.  # noqa: E501
        :type new_answer: str
        :param time: The time of this QuestionCapsule.  # noqa: E501
        :type time: int
        """
        self.swagger_types = {
            'id': int,
            'question': str,
            'answer': str,
            'new_answer': str,
            'time': int
        }

        self.attribute_map = {
            'id': 'id',
            'question': 'question',
            'answer': 'answer',
            'new_answer': 'new_answer',
            'time': 'time'
        }
        self._id = id
        self._question = question
        self._answer = answer
        self._new_answer = new_answer
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'QuestionCapsule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The question_capsule of this QuestionCapsule.  # noqa: E501
        :rtype: QuestionCapsule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this QuestionCapsule.

        capsule id  # noqa: E501

        :return: The id of this QuestionCapsule.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this QuestionCapsule.

        capsule id  # noqa: E501

        :param id: The id of this QuestionCapsule.
        :type id: int
        """

        self._id = id

    @property
    def question(self) -> str:
        """Gets the question of this QuestionCapsule.

        the question  # noqa: E501

        :return: The question of this QuestionCapsule.
        :rtype: str
        """
        return self._question

    @question.setter
    def question(self, question: str):
        """Sets the question of this QuestionCapsule.

        the question  # noqa: E501

        :param question: The question of this QuestionCapsule.
        :type question: str
        """

        self._question = question

    @property
    def answer(self) -> str:
        """Gets the answer of this QuestionCapsule.

        user's answer before  # noqa: E501

        :return: The answer of this QuestionCapsule.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer: str):
        """Sets the answer of this QuestionCapsule.

        user's answer before  # noqa: E501

        :param answer: The answer of this QuestionCapsule.
        :type answer: str
        """

        self._answer = answer

    @property
    def new_answer(self) -> str:
        """Gets the new_answer of this QuestionCapsule.

        user's new answer  # noqa: E501

        :return: The new_answer of this QuestionCapsule.
        :rtype: str
        """
        return self._new_answer

    @new_answer.setter
    def new_answer(self, new_answer: str):
        """Sets the new_answer of this QuestionCapsule.

        user's new answer  # noqa: E501

        :param new_answer: The new_answer of this QuestionCapsule.
        :type new_answer: str
        """

        self._new_answer = new_answer

    @property
    def time(self) -> int:
        """Gets the time of this QuestionCapsule.

        timestamp  # noqa: E501

        :return: The time of this QuestionCapsule.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time: int):
        """Sets the time of this QuestionCapsule.

        timestamp  # noqa: E501

        :param time: The time of this QuestionCapsule.
        :type time: int
        """

        self._time = time
